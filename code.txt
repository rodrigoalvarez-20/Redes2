#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <string.h>
//#include <winsock2.h>

typedef struct RQ
{
	//Hay que hacerlo portable, no siempre short int es de 2 bytes
	short int opCode;
	char * filename;
	char * mode;
} request;

typedef struct DataPacket
{
	short int opCode;
	short int blockNumber;
	char * data;
}packet;

typedef struct ACKPacket
{
	short int opCode;
	short int blockNumber; 
} ack;

typedef struct ERRORPacket
{
	short int opCode;
} ErrorPack;
int main(int argc, char const *argv[])
{
	char buffer [512];
    const char archivo[100] = "archivo1.txt";
    const char octetMode[] = "octet";
	int16_t * opCode = (int16_t *)buffer;
	char *filename = buffer + 2;
    char *modeOp;
	int i=2;

	*opCode = htons(1);

    sprintf(filename, "%s", archivo);
    //modeOp = buffer + strlen(archivo) + 2;
    modeOp = filename + strlen(filename) + 1;
    sprintf(modeOp, "%s", octetMode);

    printf("%s\n", filename);
    
	//printf("%02X %02X\n", buffer[0], buffer[1]);

    for(int i = 0; i < 20; i++)
        printf("%02X ", buffer[i]);

    printf("\n");
    for(int i = 0; i < 20; i++)
        printf("%c", buffer[i]);

    printf("\n");
	while(buffer[i] != '\0')
		i++;


	//request * r;
	//sendto(fd, r, sizeof(*r), 0, (sockaddr_in *) socket, sizeof(socket));
	return 0;
}